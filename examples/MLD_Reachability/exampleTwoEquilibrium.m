% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
% Example:
%   Forward reachability with a single guard condition and two equilibrium
%   points.
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 

% Parameters

N = 15;     % Number of discrete time steps
bounds = 3; % Bounds on state space for analysis (assuming [-bounds bounds] in each dimension)

% System dynamics
Ad1 = [0.75,0.25;-0.25,0.75];
Bd1 = [-0.25;-0.25];
Ad2 = [0.75,-0.25;0.25,0.75];
Bd2 = [0.25;-0.25];

% Initialize plotting
figure; hold on;
axis([ -2 2 -1 3 ]);
xlabel('$x_1$','interpreter','latex')
ylabel('$x_2$','interpreter','latex')
set(gca,'fontsize',18,'fontname','times new roman')
plot(-1,0, 'k.','markersize',25) % Left equilibrium
plot(1,0, 'k.','markersize',25)  % Right equilibrium
p = plot([ 0 0 ] , [ -bounds bounds ], 'g--','linewidth',2); % Guard
colors = interp1([1;N+1],[0 0 1;1 0 0],1:1:N+1);

% Find a good initial condition set
cx = [ -0.201 ; 1.395 ];	% Crosses the guard once
Gx = 0.2*eye(2);
Z0 = zono(Gx,cx);	
% Propagate backwards two steps
Ainv = Ad1^(-1);
Z0 = Ainv*(Z0 + -1*Bd1);
Z0 = Ainv*(Z0 + -1*Bd1);
plot(Z0,colors(1,:),1) % Plot initial condition set

% No input set
U = [];

% Generated by Hysdel
A = zeros(2);
B_u = [];
B_w = [1 0 0; 0 1 0];
B_aff = [0;0];
E_x = [1 0; -1 0; 0.75 -0.25; -0.75 0.25; 0.75 0.25; -0.75 -0.25; 0.25 0.75; -0.25 -0.75; -0.25 0.75; 0.25 -0.75];
E_u = [];
E_w = [0 0 -5; 0 0 5; -1 0 10.5; 1 0 9.5; -1 0 -9.5; 1 0 -10.5; 0 -1 10; 0 1 10; 0 -1 -10; 0 1 -10];
E_aff = [0; 5; 10.25; 9.75; 0.25; -0.25; 10.25; 9.75; 0.25; -0.25];

wUB = [5.25;4.74;1];
wLB = [-5.25;-5.25;0];

W = hybZono([diag((wUB(1:2)-wLB(1:2))/2);zeros(1,2)],[zeros(2,1);diag((wUB(3)-wLB(3))/2)],(wUB+wLB)/2,[],[],[]);

% Compute and plot reachable sets
Z = Z0;
tickLab{1} = ['$\mathcal{R}_{',num2str(0),'}$'];
for i = 1:N+1
    Z = stepMLD(Z,U,W,A,B_u,B_w,B_aff,E_x,E_u,E_w,E_aff);
    plot(Z,plotOptions('EdgeColor',colors(i,:),'FaceColor',colors(i,:))) % Plot reachable set
    tickLab{i} = ['$\mathcal{R}_{',num2str(i-1),'}$'];
end

legend(p,{'Guard'},'interpreter','latex')
colormap(colors);
cbar = colorbar;
cbar.TicksMode = 'manual';
val = 1/(((N+1)));
cbar.Ticks = val/2+[0:val:1-val];
cbar.TickLabelInterpreter = 'latex';
cbar.TickLabels = tickLab;

% exportgraphics(gcf,'twoEquilibrium.pdf')

%% PWA Approach
% figure; hold on
X0 = zono(bounds*eye(2),zeros(2,1));
% plot(X0,'k',0.1)
X0a = halfspaceIntersection(X0,[1 0],0);
X0b = halfspaceIntersection(X0,[-1 0],0);
% plot(X0a,'m',0.1)
% plot(X0b,'g',0.1)

Phia = [eye(2);Ad1]*X0a + [zeros(2,1);Bd1];
Phib = [eye(2);Ad2]*X0b + [zeros(2,1);Bd2];

Phi = union(Phia,Phib);

% Initialize plotting
figure; hold on;
axis([ -2 2 -1 3 ]);
xlabel('$x_1$','interpreter','latex')
ylabel('$x_2$','interpreter','latex')
set(gca,'fontsize',18,'fontname','times new roman')
plot(-1,0, 'k.','markersize',25) % Left equilibrium
plot(1,0, 'k.','markersize',25)  % Right equilibrium
p = plot([ 0 0 ] , [ -bounds bounds ], 'g--','linewidth',2); % Guard
colors = interp1([1;N+1],[0 0 1;1 0 0],1:1:N+1);

plot(Z0,colors(1,:),1) % Plot initial condition set

% Compute and plot reachable sets
Z = Z0;
for i = 1:N+1
    Z = [zeros(2) eye(2)]*and(Phi,Z,[eye(2) zeros(2)]);
    plot(Z,colors(i,:),1) % Plot reachable set
end

legend(p,{'Guard'},'interpreter','latex')